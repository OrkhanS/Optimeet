# Generated by Django 3.0.5 on 2020-04-10 07:23

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import simple_email_confirmation.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='BriddgyCities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=100)),
                ('city_ascii', models.CharField(max_length=100)),
                ('lat', models.FloatField(max_length=100, null=True)),
                ('lng', models.FloatField(max_length=100, null=True)),
                ('country', models.CharField(max_length=100, null=True)),
                ('iso2', models.CharField(max_length=100, null=True)),
                ('iso3', models.CharField(max_length=100, null=True)),
                ('admin_name', models.CharField(max_length=100, null=True)),
                ('capital', models.CharField(max_length=100, null=True)),
                ('population', models.IntegerField(null=True)),
                ('id_ofcity', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
            options={
                'ordering': ['-date_modified'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_number_verified', models.CharField(default='false', max_length=255, verbose_name='Is the number verified')),
                ('is_email_verified', models.BooleanField(default=False, verbose_name='Is the email verified')),
                ('is_photo_verified', models.BooleanField(default=False, verbose_name='Is the photo verified')),
                ('first_name', models.CharField(max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(max_length=150, verbose_name='last name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('rating', models.FloatField(default=0, null=True, verbose_name='Rating')),
                ('language1', models.CharField(default='false', max_length=255, verbose_name='First Language')),
                ('language2', models.CharField(blank=True, default='false', max_length=255, verbose_name='Second Language')),
                ('gender', models.CharField(blank='false', max_length=255, verbose_name='Gender')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('online', models.BooleanField(default=False)),
                ('last_online', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Last Online')),
                ('deviceToken', models.CharField(blank=True, default='None', max_length=600, verbose_name='Mobile Device Id')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            bases=(models.Model, simple_email_confirmation.models.SimpleEmailConfirmationUserMixin),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='RoomMembers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unread_count', models.PositiveIntegerField(default=0)),
                ('online', models.BooleanField(default=False, verbose_name='User is online')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='APP.Room', verbose_name='Room')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.AddField(
            model_name='room',
            name='member_users',
            field=models.ManyToManyField(related_name='rooms', through='APP.RoomMembers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Pictures',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='', verbose_name='Image')),
                ('object_id', models.PositiveIntegerField(default=False)),
                ('content_type', models.ForeignKey(default=False, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(default=False, max_length=255, verbose_name='Address')),
                ('date', models.DateField(verbose_name='date of notification')),
                ('read', models.BooleanField(default=False)),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Messages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=500, verbose_name='Content')),
                ('date', models.DateField(verbose_name='Sent')),
                ('sentFrom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SentFrom', to=settings.AUTH_USER_MODEL)),
                ('sentTo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SentTo', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('text', models.TextField()),
                ('recipients', models.ManyToManyField(related_name='recipients', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='APP.Room')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Matches',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('user1', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='First', to=settings.AUTH_USER_MODEL)),
                ('user2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Second', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmailNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(default=False, max_length=255, verbose_name='Address')),
                ('date', models.DateField(verbose_name='date of notification')),
                ('from_room', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='APP.Room')),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='email_notification', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
